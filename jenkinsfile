  def revision


  pipeline {
    agent any
    options {
        skipDefaultCheckout true
    } 

    environment {
        DOCKER_REGISTRY = "https://registry.hub.docker.com/"
    }
    stages {

         stage ('Checkout') {
            steps {
                script {
                    def repo = checkout scm
                    revision = sh(script: 'git log -1 --format=\'%h.%ad\' --date=format:%Y%m%d-%H%M | cat', returnStdout: true).trim()
                    branch = repo.GIT_BRANCH.take(20).replaceAll('/', '_')
                    if (branch != 'main') {
                        revision += "-${branch}"
                    }
                    bat "echo 'Building revision: ${revision}'"
                }
            }

        }
        stage("SCM Checkout") {
            steps {
             script {
            checkout scm
             }
            }
        }

		stage ('Compile-Package'){
            steps {
		bat "mvn -version"
        bat  "mvn clean install"
     }
    }
    
stage('Build image') { 
     steps {
       container('docker') {
                    script {
                        customImage = docker.build("${DOCKER_REGISTRY}/demo/app:${revision}", "--build-arg REVISION=${revision} -f Dockerfile .")
                    }
                }    
            }
     }
   
       

post {
        always {
            archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
        }
       }
}
}